funcs:
  - name: newConcat
    type: resolver
    body: |
      function (a, b) {
        return a.concat(b);
      }
  - name: testFile
    type: resolver
    body: |
      function (filename) {
        return filename.split(".")[0] + "_test.go";
      }
  - name: doesNotContain
    type: asserter
    body: |
      function (str, substr) {
        return str.indexOf(substr) == -1
      }
  - name: isExported
    type: asserter
    body: |
      function(name) {
        // TODO: support unicode uppercase
        return !!name.match(/^[A-Z]/)
      }
tenets:
  - name: find-funcs
    actions:
      codelingo/docs:
        title: NewConcat
        body: Example tenet that finds all exported functions that do not have a corresponding test function.
      codelingo/review:
        comment: This exported function does not have a corresponding test function.
    query: |
      import codelingo/ast/go
      go.file(depth = any):
        filename as filename
        doesNotContain(filename, "_test.go")
        go.decls:
          @review comment
          go.func_decl:
            go.ident:
              name as funcName
              isExported(funcName)
      exclude:
        go.file(depth = any):
          filename == testFile(filename)
          go.decls:
            go.func_decl:
              go.ident:
                name == newConcat("Test", funcName)
