funcs:
  - name: isPointer
    type: asserter
    body: |
      function(varName) {
        return varName.indexOf("*") !== -1
      }
specs:
  - name:  find-typed-nil
    actions:
      codelingo/review:
        comment:  If typed pointer `{{returnName}}` is nil, return nil explicitly
    query: |
      import codelingo/ast/go

      go.func_decl(depth = any):
        go.func_type:
          go.field_list: 
            sibling_order == 1
            go.field:
              go.interface_type
        @review comment
        go.return_stmt(depth = any):
          go.results:
            go.ident(depth = any):
              name as returnName
              type as returnType
              type != "interface{}"
              isPointer(returnType)
        exclude:
          go.if_stmt(depth = any):
            go.binary_expr:
              go.ident:
                name == returnName
              go.ident:
                name == "nil"
            go.block_stmt:
              go.list:
                go.return_stmt:
                  go.results:
                    go.ident:
                      name == "nil"