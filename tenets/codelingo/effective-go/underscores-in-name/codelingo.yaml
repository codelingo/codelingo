funcs:
  - name: containsInvalidUnderscores
    type: asserter
    body: |
      function(name) {
        if (name.length === 1) {
          return false
        }

        var location = name.indexOf("_")
        if (location === -1) {
          return false
        }

        // Underscores are valid if they're in-between two digits
        var digits = '0123456789'
        return digits.indexOf(name.charAt(location + 1)) === -1 || digits.indexOf(name.charAt(location - 1)) === -1
      }
  - name: isNotProto
    type: asserter
    body: |
      function(name) {
        return name.indexOf(".pb.go") === -1
      }
specs:
  - name: underscores-in-name
    actions:
      codelingo/review:
        comment: Use MixedCaps or mixedCaps rather than underscores to write multiword names. From [Effective Go](https://golang.org/doc/effective_go.html#mixed-caps).
    query: |
      import codelingo/ast/go
      go.file(depth = any):
        filename as fName
        # Ignore generated .pb.go files
        isNotProto(fName)
        @review comment
        go.ident(depth = any):
          name as varName
          containsInvalidUnderscores(varName)
