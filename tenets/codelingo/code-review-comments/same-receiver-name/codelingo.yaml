funcs:
  - name: notEqual
    type: asserter
    body: |
      function(name1, name2) {
        return name1 != name2
      }

specs:
  - name:  same-receiver-name
    actions:
      codelingo/review:
        comment: If you call the receiver "{{receiverName1}}" in "{{methodName1}}" method, don't call it "{{receiverName2}}" in "{{methodName2}}" method. Be consistent. [as specified in Code Review Comments](https://github.com/golang/go/wiki/CodeReviewComments#receiver-names)
      

    query: |
      import codelingo/ast/go
      go.dir(depth = any):
        go.func_decl(depth = any):
          go.field_list:
            go.field:
              go.names:
                go.ident:
                  name as receiverName1
              any_of:
                go.ident:
                  name as typeName
                go.star_expr:
                  go.ident:
                    name as typeName
          go.ident:
            name as methodName1
        go.func_decl(depth = any):       
          go.field_list:
            go.field:
              go.names:
                go.ident:
                  name as receiverName2
                  notEqual(receiverName1, receiverName2)
              any_of:
                go.ident:
                  name == typeName
                go.star_expr:
                  go.ident:
                    name == typeName
              
          @review comment
          go.ident:
            name as methodName2
            notEqual(methodName1, methodName2)
