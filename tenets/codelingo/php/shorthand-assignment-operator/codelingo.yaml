funcs:
  - name: replaceAssignment
    type: resolver
    body: |
      function(expr, varName) {
        varName = '$' + varName;
        expr = expr.split(' ').join('');
        operatorPos = expr.lastIndexOf(varName) + varName.length;
        operator = expr[operatorPos];
        secondOperand = expr.substring(operatorPos+1);
        if((operator == "+" || operator == "-") && secondOperand == 1){
            return varName + operator + operator;
        }
        return varName + " "+ operator + "= " + secondOperand;
      }


tenets:
  - name: shorthand-assignment-operator
    flows:
      codelingo/docs:
        title: Shorthand Assignment Operators
        body: It is recommended to use shorthand assignment operators
      codelingo/review:
        comment: It is recommended to use shorthand assignment operators
      codelingo/rewrite:
    query: |
      import codelingo/ast/php

      @rewrite --replace "{{replaceAssignment(rawExpr, varName)}}"
      @review comment
      php.expr_assign(depth = any):
        raw as rawExpr
        php.expr_variable:
          name as varName
        any_of:
          php.expr_binaryop_plus:
            php.expr_variable:
              sibling_order == 0
              name == varName
          php.expr_binaryop_minus:
            php.expr_variable:
              sibling_order == 0
              name == varName
          php.expr_binaryop_mul:
            php.expr_variable:
              sibling_order == 0
              name == varName
          php.expr_binaryop_div:
            php.expr_variable:
              sibling_order == 0
              name == varName
          php.expr_binaryop_mod:
            php.expr_variable:
              sibling_order == 0
              name == varName
          php.expr_binaryop_concat:
            php.expr_variable:
              sibling_order == 0
              name == varName