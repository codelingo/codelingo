funcs:
  - name: isGreater
    type: asserter
    body: |
      function(val1, val2) {
        return val1 == (val2 + 2)
      }
  - name: isNextStmt
    type: asserter
    body: |
      function(val1, val2) {
        return val1 == (val2 + 1)
      }
  - name: isEqual
    type: asserter
    body: |
      function(val1, val2) {
        return val1 == val2
      }
specs:
  - name:  find-sync-mutex-lock
    actions:
      codelingo/review:
        comment:  Replace sync/mutex `{{mtxName}}` with sync/atomic to improve performance
    query: |
      import codelingo/ast/go

      go.file(depth = any):
        go.decls:
          go.gen_decl:
            go.value_spec:
              go.names:
                go.ident:
                  name as mtxName
              go.selector_expr:
                go.ident:
                  name == "sync"
                go.ident:
                  name == "Mutex"
          go.func_decl(depth = any):
            go.block_stmt:
              go.list:
                child_count as ch
                @review comment
                go.expr_stmt(depth = any):
                  sibling_order as sb1
                  go.call_expr(depth = any):
                    go.selector_expr:
                      go.ident:
                        name == mtxName
                      go.ident:
                        name == "Lock"
                any_of:
                  go.expr_stmt(depth = any):
                    sibling_order as sb2
                    isGreater(sb2, sb1)
                    go.call_expr(depth = any):
                      go.selector_expr:
                        go.ident:
                          name == mtxName
                        go.ident:
                          name == "Unlock"
                  go.defer_stmt(depth = any):
                    sibling_order as sb3
                    isNextStmt(sb3, sb1)
                    isEqual(ch, 3)
                    go.call_expr(depth = any):
                      go.selector_expr:
                        go.ident:
                          name == mtxName
                        go.ident:
                          name == "Unlock"
