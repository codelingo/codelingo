funcs:
  - name: notEqual
    type: asserter
    body: |
      function (nameA, nameB) {
        return nameA != nameB
      }
tenets:
  - name: well-named-lock
    flows:
      codelingo/docs:
        title: Well Named Lock
        body: |
          A lock should be called `lock` unless other locks are present.
      codelingo/review:
        comment: There are no other locks besides '{{nameA}}' here. Rename '{{nameA}}' to 'lock'.
    query: |
      import codelingo/ast/go
      
      go.gen_decl(depth = any):
        go.type_spec:
          go.struct_type:
            go.field_list:
              @review comment
              go.field:
                go.names:
                  go.ident:
                    name as nameA
                    name != "lock"
                go.selector_expr:
                  go.ident:
                    name == "sync"
                  go.ident:
                    name == "Mutex"
              exclude:
                go.field:
                  go.names:
                    go.ident:
                      name as nameB
                      notEqual(nameA, nameB)
                  go.selector_expr:
                    go.ident:
                      name == "sync"
                    go.ident:
                      name == "Mutex"
