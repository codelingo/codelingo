functions:
- name: isNotInterfaceFile
  type: asserter
  body: |
    function (str) {
      return ! str.match(/(^|\/)interface.go$/);
    }
- name: isInterfaceFile
  type: asserter
  body: |
    function (str) {
      return str.match(/(^|\/)interface.go$/);
    }
tenets:
  - name: orginterfacesnew
    flows:
      codelingo/rewrite:
        filecontents: |
          package {{pkgname}}

          {{src}
      codelingo/docs:
        title: Interface Not In An Interface File
        body: Finds interfaces which are not defined in a file named `interface.go`, where no `interface.go` exists yet for that directory.
      codelingo/review:
        comment: There is no `interface.go` file in this directory and interface `{{iname}}` should be defined there. Interfaces should be defined in an `interface.go` file within the relevant folder.
    query: |
      import codelingo/ast/go

      @rewrite newfile "interface.go" filecontents
      go.dir:
        go.file:
          go.ident:
            name as pkgname
            start_line == 1

          filename as fnamebad
          isNotInterfaceFile(fnamebad)

          @rewrite cut src
          @review comment
          go.type_spec(depth = any):
            go.ident:
              child_count == 0
              name as iname

            go.interface_type

        exclude:
          go.file:
            filename as fnameinterfacego
            isInterfaceFile(fnameinterfacego)