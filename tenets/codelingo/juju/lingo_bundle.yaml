description: Best practices for the juju/juju repository.
version: 0.0.0
tenets:
  - accept-liberally-emit-conservatively
  - api-not-closed
  - arg-named-config
  - arg-named-context
  - arg-named-request
  - arg-named-selector
  - arg-named-spec
  - arg-name-proper-noun
  - avoid-named-returns
  - avoid-unnecessary-nesting
  - bug-pr-has-launchpad-number
  - cabability-used
  - callback-without-framework
  - channel-assured-but-closed
  - consistent-name-for-receivers-of-same-object
  - constructor-returns-interface
  - correct-lock-ordering
  - covers-one-concern
  - db-not-closed
  - describe-purpose-not-implementation-of-field
  - describe-purpose-not-implementation-of-func
  - desc-too-much-reponsibility
  - dont-shadow-enclosing-scope
  - env-vars
  - error-messages-well-formatted
  - errors-are-handled
  - excessively-long-names
  - exported-var
  - exported-var-outside-export-test
  - export-only-for-test
  - extract-interface-from-packages
  - extract-internal-functions
  - file-not-closed
  - func-accepts-interface-but-returns-concrete-type
  - func-if-else-too-much-responsibility
  - funcs-with-nonexplicit-deps
  - functionality-used-globally
  - function-comment-starts-with-name
  - global-var
  - hidden-nil-interface-values
  - indirect-without-abstraction
  - interface-method-returns-private-concrete-type
  - interface-needs-package
  - interface-next-to-implementation
  - interface-returns-concrete-type
  - interface-too-many-methods
  - invalid-data-without-error
  - linted-by-gometalinter
  - local-version-of-func
  - locks-indicate-sharing-memory
  - lsp-is-tested
  - max-two-nested-function-definitions
  - method-calls-ordered-incorrectly
  - mongo-not-closed
  - more-than-three-args
  - name-of-error-should-be-err
  - new-feature-has-branched-from-develop
  - no-explanation-for-passing-on-capability
  - no-export-test-mechanism
  - no-magic-naked-return
  - oo-inheritance-too-much-reponsibility
  - order-of-imports
  - package-sync-not-required
  - private-var
  - proper-unexported-scheme
  - received-items-are-your-responsibility
  - responsibility-dropped
  - return-early-on-failure
  - share-memory-by-communicating
  - shorten-receivers-and-loop-index-vars
  - struct-has-default-vals
  - struct-passed-but-barely-used
  - type-not-designed-for-serialization
  - type-not-responsible-for-dependencies
  - unused-private-var
  - use-intermediate-variables
  - use-pointer-arg-for-worker
  - use-resource-directly
  - vague-names
  - var-could-be-inlined
  - well-formed-comments
  - well-named-test-file
  - write-off-channelled-items
  - wrap-err
tags:
  - git
  - github
  - go
  - golang
  - juju
  - nlp